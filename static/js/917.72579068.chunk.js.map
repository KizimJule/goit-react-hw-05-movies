{"version":3,"file":"static/js/917.72579068.chunk.js","mappings":"4LAAO,IAAMA,EAAM,mCAENC,EAAW,8B,qICAXC,EAAMC,EAAAA,GAAAA,IAAH,8FAKHC,EAAOD,EAAAA,GAAAA,KAAH,qHAOJE,EAAQF,EAAAA,GAAAA,MAAH,uHAQLG,EAASH,EAAAA,GAAAA,OAAH,ia,kDCjBZ,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,2HAA2C,EAC1CC,EADD,UACUR,EAAAA,EADV,iCAC2CD,EAAAA,EAD3C,iCACuEQ,GADvE,SAEkBE,EAAAA,GAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAKEA,EAASC,KAAKC,SALhB,mEAFPH,EAAAA,GAAAA,SAAAA,QAAyB,+BAUzBH,EAAcO,UAAY,CACxBN,MAAOO,IAAAA,OACPC,KAAMD,IAAAA,Q,6BCTKE,EAAY,SAAC,GAAyB,IAAD,EAAtBC,EAAsB,EAAtBA,gBAC1B,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAS,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAmC9C,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,sGAC0BjB,EAAce,GADxC,OACQG,EADR,OAGQC,EAAoBD,EAAUE,KAClC,kBAAuD,CACrDC,GADF,EAAGA,GAEDC,MAFF,EAAOA,MAGLC,OAAQ,kCAHV,EAAcC,YAIZC,aAJF,EAAmCA,aAAnC,IAOFd,EAAgBQ,GAXlB,4CAHc,sBACTJ,GADS,mCAgBdW,EACD,GAAE,CAACX,EAAWJ,KAGb,SAAC,EAAD,WACE,UAAC,EAAD,CAASgB,SAnCQ,SAAAC,GACnBA,EAAIC,iBAEJ,IAAMC,EAAOF,EAAIG,cACX9B,EAAQ6B,EAAKE,SAASC,OAAOC,MACd,KAAjBjC,EAAMkC,QAKVrB,EAAe,CAAEb,MAAAA,IACjB6B,EAAKM,SAJHC,MAAM,UAKT,EAuBG,WACE,SAAC,EAAD,CACEC,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAAC,EAAD,CAAWJ,KAAK,SAAhB,wBAIP,E,SCtDYK,EAAU/C,EAAAA,GAAAA,QAAH,yFAKPgD,EAAgBhD,EAAAA,GAAAA,GAAH,kNAWbiD,EAAKjD,EAAAA,GAAAA,GAAH,iJASFkD,EAAWlD,EAAAA,GAAAA,IAAH,8DAIRmD,EAAanD,EAAAA,GAAAA,EAAH,mEAIVoD,GAAWpD,EAAAA,EAAAA,IAAOqD,EAAAA,GAAPrD,CAAH,6OAaRsD,EAAItD,EAAAA,GAAAA,EAAH,mEAIDuD,EAAMvD,EAAAA,GAAAA,IAAH,mGCChB,EAjDe,WACb,IAAMwD,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqB5C,EAArB,KAGA,OACE,2BACE,UAAC,EAAD,YACE,SAACD,EAAD,CAAWC,gBAAiBA,IACV,KAAjB4C,GACC,0BACE,SAAC,EAAD,UACGA,EAAanC,KAAI,SAAAoC,GAAU,OAC1B,SAAC,EAAD,WACE,UAAC,EAAD,CACEC,GAAE,kBAAaD,EAAWnC,IAC1BqC,MAAO,CAAEC,KAAMP,GAFjB,WAIE,SAAC,EAAD,CACEQ,IACEJ,EAAWjC,OACP,kCACAiC,EAAWjC,OACX,8DAENsC,IAAKL,EAAWlC,MAChBwC,MAAM,MACNC,OAAO,SAET,UAAC,EAAD,YACE,UAAC,EAAD,WAAgBP,EAAWlC,MAA3B,QACA,UAAC,EAAD,sBACWkC,EAAW/B,uBAnBhB+B,EAAWnC,GADG,SA6BhC,SAAC,EAAD,qDAKT,C","sources":["components/Fetch/Key-url.jsx","components/SearchBox/SearchBox.styled.jsx","components/Fetch/FetchSearchFilm.jsx","components/SearchBox/SearchBox.jsx","styled/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["export const KEY = 'f3ea910b205c898fa80453aad139450a';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  gap: 12px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  border-radius: 8px;\n  font: inherit;\n  font-size: 28px;\n  width: 360px;\n`;\n\nexport const Button = styled.button`\n  font-size: 24px;\n  padding: 12px 16px;\n  border-radius: 8px;\n  border: 1px solid #000;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  text-transform: uppercase;\n  color: #000;\n  font-weight: 500;\n  background: #cfe0e8;\n\n  :hover,\n  :focus {\n    background-color: #87bdd8;\n    color: #fff;\n    transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { KEY, BASE_URL } from './Key-url';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getSearchFilm(query, page = 1) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`;\n  const response = await axios.get(url);\n\n  // console.log(response.data, '----data111');\n  return response.data.results;\n}\n\ngetSearchFilm.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n","import * as SC from './SearchBox.styled';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchFilm } from '../Fetch/FetchSearchFilm';\n\nexport const SearchBox = ({ setSearchMovies }) => {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const filmQuery = searchQuery.get('query') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    const query = form.elements.search.value;\n    if (query.trim() === '') {\n      // toast.error('Please, enter the word');\n      alert('Oops!!!');\n      return;\n    }\n    setSearchQuery({ query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!filmQuery) return;\n\n    async function fetchFilms() {\n      const dataFilms = await getSearchFilm(filmQuery);\n\n      const requiredDataFilms = dataFilms.map(\n        ({ id, title, poster_path: poster, vote_average }) => ({\n          id,\n          title,\n          poster: 'https://image.tmdb.org/t/p/w500' + poster,\n          vote_average,\n        })\n      );\n      setSearchMovies(requiredDataFilms);\n    }\n    fetchFilms();\n  }, [filmQuery, setSearchMovies]);\n\n  return (\n    <SC.Div>\n      <SC.Form onSubmit={handleSubmit}>\n        <SC.Input\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SC.Button type=\"submit\">Search</SC.Button>\n      </SC.Form>\n    </SC.Div>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 120px 20px;\n  margin: 0 auto;\n  max-width: 1280px;\n`;\nexport const UlSearchFilms = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  /* flex-direction: column; */\n  justify-content: center;\n  gap: 20px;\n  list-style: none;\n  padding: 0px;\n  margin: 0px;\n  margin: 0 auto;\n`;\nexport const Li = styled.li`\n  width: 200px;\n\n  :hover,\n  :focus {\n    scale: 1.1;\n    transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\nexport const DivDescr = styled.div`\n  padding-top: 8px;\n  width: 200px;\n`;\nexport const PAboutFilm = styled.p`\n  margin: 0 0 10px 0;\n  font-size: 18px;\n`;\nexport const LinkList = styled(Link)`\n  font-size: 24px;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  color: #000;\n\n  :hover,\n  :focus {\n    color: #fff;\n    transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\nexport const P = styled.p`\n  font-size: 40px;\n  text-align: center;\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n  border-radius: 5px;\n`;\n","import { SearchBox } from '../components/SearchBox/SearchBox';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as SC from '../styled/Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n\n  const [searchMovies, setSearchMovies] = useState('');\n  // console.log('searchMovies', searchMovies);\n\n  return (\n    <main>\n      <SC.Section>\n        <SearchBox setSearchMovies={setSearchMovies} />\n        {searchMovies !== '' ? (\n          <div>\n            <SC.UlSearchFilms>\n              {searchMovies.map(searchFilm => (\n                <SC.Li key={searchFilm.id}>\n                  <SC.LinkList\n                    to={`/movies/${searchFilm.id}`}\n                    state={{ from: location }}\n                  >\n                    <SC.Img\n                      src={\n                        searchFilm.poster\n                          ? 'https://image.tmdb.org/t/p/w500' +\n                            searchFilm.poster\n                          : 'https://dummyimage.com/200x300/858585/fff.jpg&text=No+photo'\n                      }\n                      alt={searchFilm.title}\n                      width=\"200\"\n                      height=\"240\"\n                    />\n                    <SC.DivDescr>\n                      <SC.PAboutFilm>{searchFilm.title} </SC.PAboutFilm>\n                      <SC.PAboutFilm>\n                        Rating: {searchFilm.vote_average}\n                      </SC.PAboutFilm>\n                    </SC.DivDescr>\n                  </SC.LinkList>\n                </SC.Li>\n              ))}\n            </SC.UlSearchFilms>\n          </div>\n        ) : (\n          <SC.P>No movies... Try to find something</SC.P>\n        )}\n      </SC.Section>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","BASE_URL","Div","styled","Form","Input","Button","getSearchFilm","query","url","axios","response","data","results","propTypes","PropTypes","page","SearchBox","setSearchMovies","useSearchParams","searchQuery","setSearchQuery","filmQuery","get","useEffect","dataFilms","requiredDataFilms","map","id","title","poster","poster_path","vote_average","fetchFilms","onSubmit","evt","preventDefault","form","currentTarget","elements","search","value","trim","reset","alert","type","name","autoComplete","autoFocus","placeholder","Section","UlSearchFilms","Li","DivDescr","PAboutFilm","LinkList","Link","P","Img","location","useLocation","useState","searchMovies","searchFilm","to","state","from","src","alt","width","height"],"sourceRoot":""}